{"remainingRequest":"D:\\store\\项目\\VUE\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\store\\项目\\VUE\\vue_app_00\\src\\main.js","dependencies":[{"path":"D:\\store\\项目\\VUE\\vue_app_00\\src\\main.js","mtime":1565425872401},{"path":"D:\\store\\项目\\VUE\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564466830040},{"path":"D:\\store\\项目\\VUE\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1564466829890}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue'; // 导入路由\n\nimport VueRouter from 'vue-router'; // 导入vue-resource\n\nimport axios from 'axios';\nVue.prototype.axios = axios; //1:完整引入mint-ui\n\nimport MintUI from 'mint-ui'; //3:将mint-ui注册vue\n\nVue.use(MintUI); // import VueResource from 'vue-resource'\n// 导入组件\n\nimport App from './App.vue'; // 导入样式\n\nimport './lib/mui/css/mui.min.css';\nimport 'mint-ui/lib/style.css';\nimport './lib/mui/css/icons-extra.css'; // 导入mintUI组件\n\nimport { Header, Tabbar, TabItem, Swipe, SwipeItem, Button, Lazyload } from 'mint-ui'; // 安装路由\n\nimport router from './router.js';\nimport VueX from 'vuex';\nVue.use(VueX);\nVue.use(Lazyload);\nVue.component(Swipe.name, Swipe);\nVue.component(SwipeItem.name, SwipeItem);\nVue.component(Tabbar.name, Tabbar);\nVue.component(TabItem.name, TabItem);\nVue.component(Header.name, Header);\nVue.component(Button.name, Button);\nVue.use(VueRouter); // 阻止生成生产提示\n\nVue.config.productionTip = false;\nvar car = JSON.parse(localStorage.getItem('car') || '[]');\nvar store = new VueX.Store({\n  state: {\n    car: []\n  },\n  mutations: {\n    // 加入购物车\n    addcar: function addcar(state, count) {\n      var have = false;\n      state.car.some(function (item) {\n        if (item.id == count.id) {\n          item.count += count.count;\n          have = true;\n          return;\n        }\n      });\n\n      if (have == false) {\n        state.car.push(count);\n      }\n\n      console.log(state.car);\n      localStorage.setItem(\"car\", JSON.stringify(state.car));\n    },\n    // 购物车中添加商品数量\n    addcount: function addcount(state, info) {\n      state.car.some(function (item) {\n        if (item.id == info.id) {\n          item.count = parseInt(info.count);\n          return;\n        }\n      });\n      localStorage.setItem(\"car\", JSON.stringify(state.car));\n    },\n    // 删除购物车的商品\n    removegoods: function removegoods(state, id) {\n      state.car.some(function (item, i) {\n        if (item.id == id) {\n          state.car.splice(i, 1);\n          return;\n        }\n      });\n      localStorage.setItem(\"car\", JSON.stringify(state.car));\n    },\n    // 切换商品的勾选状态\n    updategoodselected: function updategoodselected(state, info) {\n      state.car.some(function (item) {\n        if (item.id == info.id) {\n          item.selected = info.selected;\n        }\n      });\n      localStorage.setItem(\"car\", JSON.stringify(state.car));\n    }\n  },\n  getters: {\n    shopnumber: function shopnumber(state) {\n      var sum = 0;\n      state.car.forEach(function (item) {\n        sum += item.count;\n      });\n      return sum;\n    },\n    getgoodsselected: function getgoodsselected(state) {\n      var obj = {};\n      state.car.forEach(function (item) {\n        obj[item.id] = item.selected;\n      });\n      return obj;\n    },\n    addgoodsamount: function addgoodsamount(state) {\n      var obj = {\n        count: 0,\n        amount: 0\n      };\n      state.car.forEach(function (item) {\n        if (item.selected == true) {\n          obj.count += item.count;\n          obj.amount += item.count * item.price;\n        }\n      });\n      return obj;\n    }\n  }\n}); // 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css';\nnew Vue({\n  el: '#app',\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store\n});",{"version":3,"sources":["src\\main.js"],"names":["Vue","VueRouter","axios","prototype","MintUI","use","App","Header","Tabbar","TabItem","Swipe","SwipeItem","Button","Lazyload","router","VueX","component","name","config","productionTip","car","JSON","parse","localStorage","getItem","store","Store","state","mutations","addcar","count","have","some","item","id","push","console","log","setItem","stringify","addcount","info","parseInt","removegoods","i","splice","updategoodselected","selected","getters","shopnumber","sum","forEach","getgoodsselected","obj","addgoodsamount","amount","price","el","render","h"],"mappings":"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","sourceRoot":"D:\\store\\项目\\VUE\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\n// 导入路由\r\nimport VueRouter from 'vue-router'\r\n// 导入vue-resource\r\nimport axios from 'axios';\r\nVue.prototype.axios = axios;\r\n//1:完整引入mint-ui\r\nimport MintUI from 'mint-ui'\r\n//3:将mint-ui注册vue\r\nVue.use(MintUI);\r\n// import VueResource from 'vue-resource'\r\n// 导入组件\r\nimport App from './App.vue'\r\n// 导入样式\r\nimport './lib/mui/css/mui.min.css'\r\nimport 'mint-ui/lib/style.css'\r\nimport './lib/mui/css/icons-extra.css'\r\n// 导入mintUI组件\r\nimport { Header, Tabbar, TabItem, Swipe, SwipeItem, Button, Lazyload } from 'mint-ui'\r\n// 安装路由\r\nimport router from './router.js'\r\nimport VueX from 'vuex'\r\nVue.use(VueX);\r\nVue.use(Lazyload);\r\nVue.component(Swipe.name, Swipe);\r\nVue.component(SwipeItem.name, SwipeItem);\r\nVue.component(Tabbar.name, Tabbar);\r\nVue.component(TabItem.name, TabItem);\r\nVue.component(Header.name, Header);\r\nVue.component(Button.name, Button);\r\nVue.use(VueRouter);\r\n// 阻止生成生产提示\r\nVue.config.productionTip = false;\r\nvar car = JSON.parse(localStorage.getItem('car') || '[]')\r\nvar store = new VueX.Store({\r\n  state: {\r\n    car: []\r\n  },\r\n  mutations: {\r\n    // 加入购物车\r\n    addcar(state, count) {\r\n      var have = false;\r\n      state.car.some(item => {\r\n        if (item.id == count.id) {\r\n          item.count += count.count;\r\n          have = true;\r\n          return\r\n        }\r\n      });\r\n      if (have == false) {\r\n        state.car.push(count);\r\n      }\r\n      console.log(state.car)\r\n      localStorage.setItem(\"car\", JSON.stringify(state.car));\r\n    },\r\n    // 购物车中添加商品数量\r\n    addcount(state, info) {\r\n      state.car.some(item => {\r\n        if (item.id == info.id) {\r\n          item.count = parseInt(info.count);\r\n          return\r\n        }\r\n      })\r\n      localStorage.setItem(\"car\", JSON.stringify(state.car))\r\n    },\r\n    // 删除购物车的商品\r\n    removegoods(state,id){\r\n      state.car.some((item,i)=>{\r\n        if(item.id==id){\r\n          state.car.splice(i,1)\r\n          return\r\n        }\r\n      })\r\n      localStorage.setItem(\"car\", JSON.stringify(state.car))\r\n    },\r\n    // 切换商品的勾选状态\r\n    updategoodselected(state,info){\r\n      state.car.some(item=>{\r\n        if(item.id==info.id){\r\n          item.selected=info.selected;\r\n        }\r\n      })\r\n      localStorage.setItem(\"car\", JSON.stringify(state.car)) \r\n    }\r\n    },\r\n \r\n  getters: {\r\n    shopnumber(state) {\r\n      var sum = 0;\r\n      state.car.forEach(item => {\r\n        sum += item.count;\r\n      });\r\n      return sum\r\n    },\r\n    getgoodsselected(state){\r\n      var obj={}\r\n      state.car.forEach(item=>{\r\n        obj[item.id]=item.selected\r\n      })\r\n      return obj;\r\n    },\r\n    addgoodsamount(state){\r\n      var obj={count:0,amount:0}\r\n        state.car.forEach(item=>{\r\n          if(item.selected==true){\r\n            obj.count+=item.count;\r\n            obj.amount+=item.count*item.price\r\n          }\r\n        })\r\n        return obj\r\n  }\r\n}\r\n})\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  render: h => h(App),\r\n  store\r\n})\r\n"]}]}